The Task

We’re going to recap our understanding of HTML, SCSS, and React JS by doing a tech test. A tech test commonly used as part of the interview process when applying for a developer job. They are generally open-ended and can have time constraints, companies want to see how you approach a problem, and what you’ve chosen to focus on.

You have been tasked with creating a prototype Todo application for a small business. Unfortunately they’re on a major time constraint, but fortunately they’ve got a cracking designer who has made a short loom video (https://www.loom.com/share/1da587da8e644395b3a731f137825bb7) to help you understand what they would like made.

“We’re going to be showing off our new application (MyTodos) to some investors this afternoon. Right now we’ve got some great ideas but we need those turned into a prototype so the investors can get a proper feel for how the site is going to work. We want to give them a link to the site that they can open it on their phones during our demo.”

Let's build!

We’re aiming for the following goals for this project:

A live site: Your site must be live and a link sent to the coaches before the end of the time. Do not leave this until the end. I recommend setting up Github pages and deploying at the beginning so you’ve got something deployed, it will update automatically as you commit.
MVP and iteration: We are not expecting you to be able to completely finish this task in the timeframe given (although amazing if you can). You have to decide how to break this down and where to focus your efforts to create the best possible MVP by the end.
Apply what you are learning: This is a great place to apply what you have been learning on all of the course so far. In particular we want to see you using SCSS and BEM naming conventions.
Requirements

We need the live site URL before the time has finished. If you want to make changes after the deadline, make a new branch.
You need to have it as a public repository on GitHub
We expect to see you using commits
We would like you to take a Mobile first approach to the implementation. It needs to work on different device widths.
Good luck!
